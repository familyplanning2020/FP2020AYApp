)
})
output$infoCondom <- renderUI({
tags$span(
popify(bsButton("infoCondom", icon("info"), size = "extra-small"),
"Definition",
"Percentage of young women age 15-24 who reported using a condom at last sexual intercourse, of all young women who had sex with more than one partner in the 12 months preceding the survey. Pastel purple represents 15-24."),
)
})
output$infoUnmet <- renderUI({
tags$span(
popify(bsButton("infoUnmet", icon("info"), size = "extra-small"),
"Definitions",
"<strong>Unmarried Sexually Active % :</strong> Percentage of unmarried sexually active women with unmet need. Light green represents 15-19, pastel purple represents 15-24, and dark green represents 20-24. <br/> <strong>Married % :</strong> Percentage of married women with unmet need. Light green represents 15-19, pastel purple represents 15-24, and dark green represents 20-24."
),
)
})
output$infoUUnMarr <- renderUI({
tags$span(
popify(bsButton("infoUUnMarr", icon("info"), size = "extra-small"),
"Definition",
"Percentage of unmarried sexually active women with unmet need. Light green represents 15-19, pastel purple represents 15-24, and dark green represents 20-24."),
)
})
output$infoUMarr <- renderUI({
tags$span(
popify(bsButton("infoUMarr", icon("info"), size = "extra-small"),
"Definition",
"Percentage of women women with unmet need. Light green represents 15-19, pastel purple represents 15-24, and dark green represents 20-24."),
)
})
#Code for Information Buttons End
#Start Code for Graphs
#New Plot: Population by Age Groups
ay_res <- reactive({
res <- aypopdata.long %>% filter(aypopdata.long$Country == input$country)
req(nrow(res) > 0)
res
})
output$graph <- renderPlot({
bar_one <- (ggplot(ay_res(), aes(Country, Count, fill = Age_Group)) + geom_bar(stat = "identity") +
geom_text(aes(label=paste0(Count,"%", " ", "(", (round(Round_Total/1000000,1))," ", "Million", ")")), color="black", size=3.5, position = position_stack(vjust = 0.5))) +
theme_classic() +
scale_fill_manual(values = cbp2, labels = c("Young Adolescents (10-14)", "Older Adolescents (15-19)","Older Youth (20-24)"), name = "Age Group") +
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.title.x = element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "right")+
coord_flip()+ scale_y_reverse() +
labs(caption="Source: UN Population Division 2020", size=7)
vals$bar_one <- bar_one
print(bar_one)
})
output$downloadGraph <- downloadHandler(
filename = function() {
paste("Adolescents and Youth", "png", sep = ".")
},
content = function(file) {
png(file, width = 980, height = 400)
print(vals$bar_one)
dev.off()
})
### END PLOT
#Key Life Events Table
kle_mar_res <- reactive({
res3 <- kle_marriage %>% filter(kle_marriage$Country == input$country)
req(nrow(res3) > 0)
table1 <- matrix(c(res3[[1,3]], NA, res3[[1,4]], res3[[1,5]], NA, res3[[1,6]],  res3[[1,7]], NA, res3[[1,2]], res3[[1,2]]), ncol = 2, byrow = TRUE)
colnames(table1) <- c("% Married", "% Married before 18 Years Old")
rownames(table1) <- c( "15-19", "20-24", "25-29","15-24", "Source")
table2 <- as.matrix(table1)
`Age Group`=c( "15-19", "20-24", "25-29","15-24", "Source")
table2=cbind(`Age Group`, table2)
table2
})
output$table <- renderTable(kle_mar_res(),hover =TRUE, bordered = TRUE, colnames= TRUE,digits = 1)
#Recent Sexual Activity
ayfp_sex_res <- reactive({
res4 <- ayfp %>% select(2,3,6,7)  %>% filter(ayfp$Country == input$country)
req(nrow(res4) > 0)
res4$"15-19" <- res4$"Recent sex older adolescents aged 15-19"
res4$"20-24" <- res4$"Recent sex older youth aged 20-24"
#res4 <- res4[,-1:-3]
res4.long <- res4 %>% gather("Age.Group", "Percent","15-19" , "20-24")
res4.long
res4.long %>% filter(res4.long$Percent>0)
})
output$sex_activity_graph <- renderPlot({
source<- ayfp_sex_res()
# validate(
#   need(nrow(ayfp_sex_res()) > 0, "No data for this selection.")
# )
sex_act <- (ggplot(subset(ayfp_sex_res(), `Percent`>0), aes(x= reorder(`Age.Group`, -`Percent`), y = `Percent`, fill = `Age.Group`)) + geom_bar(stat = "identity"))+
coord_flip() + theme_classic() +
geom_text(aes(label=`Percent`), color="black", size=3.5) +
scale_fill_manual(values = cbp3, name = "Age Group") +
labs(title = "% Sexually Active (Last Month)") +  theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom") + labs(caption=paste0("Source: ",source$Source), size=7)
vals$sex_act<- sex_act
print(sex_act)
})
output$downloadGraph2 <- downloadHandler(
filename = function() {
paste("Sexual Activity", "png", sep = ".")
},
content = function(file) {
png(file, width = 980, height = 400)
print(vals$sex_act)
dev.off()
})
#END PLOT
#Ever Sexual Activity
ayfp_never_res <- reactive({
res5 <- ayfp %>% select(2,3,4,5) %>% filter(ayfp$Country == input$country)
req(nrow(res5) > 0)
ayfp_never_res
res5$"15-19" <- res5$"Never have had sex older adolescents aged 15-19"
res5$"20-24" <- res5$"Never have had sex older youth aged 20-24"
res5.long <- res5 %>% gather("Age.Group", "Percent",  "15-19", "20-24")
res5.long
res5.long %>% filter(res5.long$Percent>0)
})
output$never_sex_graph <- renderPlot({
source<- ayfp_never_res()
never_sex<- (ggplot(subset(ayfp_never_res(), `Percent`>0), aes(x= reorder(`Age.Group`,`Percent`), y = `Percent`, fill = `Age.Group`)) + geom_bar(stat = "identity")) +
coord_flip() + theme_classic() +
geom_text(aes(label=`Percent`), color="black", size=3.5) + scale_fill_manual(values = cbp3, name = "Age Group") +
labs(title= "% Never Had Sex") + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom") +labs(caption=paste0("Source: ",source$Source), size=7)
vals$never_sex<- never_sex
print(never_sex)
})
output$downloadGraph3 <- downloadHandler(
filename = function() {
paste("Never Had Sex", "png", sep = ".")
},
content = function(file) {
png(file, width = 980, height = 400)
print(vals$never_sex)
dev.off()
})
#END PLOT
#NEW PLOT
#timeline of key life events
kle_age_res <- reactive({
res2 <- kle_age %>% filter(kle_age$Country == input$country)
req(nrow(res2) > 0)
res2.long <- res2 %>% gather(Event, Age, `First Marriage`,`First Sex`, `First Birth`)
res2.long$Event<- factor(res2.long$Event, levels = c("First Marriage", "First Sex", "First Birth"))
res2.long
})
output$linegraph <- renderPlot({
source<- kle_age_res()
#Create Plot
timeline_plot<- ggplot(kle_age_res(), aes(x=Age, y=0.25, col=Event, label=""))+
theme_classic() +
#labs(col="Events") +
geom_hline(yintercept = 0.25, color = '#000000', size = 0.25) +
geom_point(aes(y=0.25), size=6) +
geom_text(aes (x = Age, y = 0.65, label = Age), size = 3.5, color = "#000000",check_overlap = TRUE) +
scale_color_manual(values = cbp1) +
scale_x_continuous(name="Median Age at Event (Among 25-29 Year Olds)", breaks=seq(15, 25, 2), labels=c("15", "17", "19", "21", "23", "25"), limits=c(15, 25)) +
scale_y_continuous(limits=c(0,1)) +
theme(plot.background = element_rect(fill = '#f0f1f2'),
panel.background = element_rect(fill = '#f0f1f2'),
axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x=element_text(size = 12, margin = margin(0, 0, 10, 0)),
axis.line.x = element_line(size = 1, color = '#121212'),
axis.text.x = element_text(size = 12, margin = margin(1, 0, 15, 0)),
axis.ticks.x =element_line(),
axis.ticks.length.x = unit(0.25, "cm"),
legend.position = "top",
legend.background = element_rect(fill = '#f0f1f2'),
legend.text = element_text(size = 12),
legend.title = element_blank()) + labs(caption=paste0("Source: ",source$Source), size=7)
timeline_plot
vals$timeline_plot<- timeline_plot
print(timeline_plot)
})
output$downloadGraph1 <- downloadHandler(
filename = function() {
paste("Key Life Events", "png", sep = ".")
},
content = function(file) {
png(file, width = 980, height = 400)
print(vals$timeline_plot)
dev.off()
})
#NEW PLOT
ayfp_mod_res <- reactive({
res <- ayfp %>% select(2,3,8, 9) %>% filter(ayfp$Country == input$country)
req(nrow(res) > 0)
res$`15-19` <- res$`MCPR for unmarried sexually active adolescents (15-19)**`
res$`20-24` <- res$`MCPR for unmarried sexually active youth (20-24)**`
res.long <- res %>% gather("Age.Group", "Percent", "15-19" , "20-24")
res.long
res.long %>% filter(res.long$Percent>0)
})
output$mod_con <- renderPlot({
source <- ayfp_mod_res()
mcp_aw <- (ggplot(subset(ayfp_mod_res(), `Percent`>0), aes(x= reorder(`Age.Group`, -`Percent`), y = `Percent`, fill = `Age.Group`)) + geom_bar(stat = "identity"))+
coord_flip() + theme_classic() + geom_text(aes(label=`Percent`), color="black", size=3.5) +
labs( subtitle = "MCP(%) Among Unmarried Sexually Active") +  theme(plot.subtitle=element_text(size=13, color="black")) +
scale_fill_manual(values = cbp3, name = "Age Group") +
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom") +labs(caption=paste0("Source: ",source$Source), size=7)
vals$mcp_aw <- mcp_aw
print(mcp_aw)
})
output$downloadGraph4 <- downloadHandler(
filename = function() {
paste("MCP- UMSA", "png", sep = ".")
},
content = function(file) {
png(file, width = 980, height = 400)
print(vals$mcp_aw)
dev.off()
})
#END PLOT
# Modern Contraceptive Use: Married Women
ayfp_mod_marr<- reactive({
res <- ayfp %>% select(2,3,10, 11, 12) %>% filter(ayfp$Country == input$country)
req(nrow(res) > 0)
res$`15-19` <- res$`MCPR for married adolescents (15-19)`
res$`20-24` <- res$`MCPR for married youth (20-24)`
res$`15-24` <- res$`MCPR for married adolescent and youth (15-24)`
res.long <- res %>% gather("Age.Group", "Percent", "15-19" , "20-24", "15-24")
res.long
res.long %>% filter(res.long$Percent>0)
})
output$mod_marr <- renderPlot({
source<- ayfp_mod_marr()
mcp_mw <- (ggplot(subset(ayfp_mod_marr(), `Percent`>0), aes(x= reorder(`Age.Group`, -`Percent`), y = `Percent`, fill = `Age.Group`)) + geom_bar(stat = "identity")) +
coord_flip() + theme_classic() + geom_text(aes(label= round(`Percent`,1)), color="black", size=3.5) +
labs(subtitle = "MCP(%) Among Married") +  theme(plot.subtitle=element_text(size=13, color="black")) +
scale_fill_manual(values = cbp5, name = "Age Group") +
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom") +
labs(caption=paste0("Source: ",source$Source), size=7)
vals$mcp_mw <- mcp_mw
print(mcp_mw)
})
output$downloadGraph5 <- downloadHandler(
filename = function() {
paste("MCP- Married Women", "png", sep = ".")
},
content = function(file) {
png(file, width = 980, height = 400)
print(vals$mcp_mw)
dev.off()
})
#END PLOT
#Condom Use at Last Sex
ayfp_con_res<- reactive({
res <- ayfp %>% select(2,3,29) %>% filter(ayfp$Country == input$country)
req(nrow(res) > 0)
res$`15-24` <- res$`Condom use during last sex: 15-24 year olds`
res.long <- res %>% gather("Age.Group", "Percent", "15-24")
res.long %>% filter(res.long$Percent>0)
})
output$con_use <- renderPlot({
source <- ayfp_con_res()
fig <- (ggplot(subset(ayfp_con_res(), `Percent`>0), aes(x= reorder(`Age.Group`, -`Percent`), y = `Percent`, fill = `Age.Group`)) + geom_bar(stat = "identity"))+
coord_flip() + theme_classic() + geom_text(aes(label=`Percent`), color="black", size=3.5) +
labs(subtitle = "% Condom Use During Last Sex") +  theme(plot.subtitle=element_text(size=13, color="black")) +
scale_fill_manual(values = cbp4, name = "Age Group") +
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom") +labs(caption=paste0("Source: ",source$Source), size=7)
vals$fig <- fig
print(fig)
})
output$downloadGraph10 <- downloadHandler(
filename = function() {
paste("Condom Use at Last Sex", "png", sep = ".")
},
content = function(file) {
png(file, width = 980, height = 400)
print(vals$fig)
dev.off()
})
#Traditional Method Use
#UMSA
ayfp_trad_unmarr<- reactive({
res <- ayfp %>% select(2,3,13,14) %>% filter(ayfp$Country == input$country)
req(nrow(res) > 0)
res$`15-19` <- res$`% of unmarried sexually active** older adolescents aged 15-19 using a traditional method`
res$`20-24` <- res$`% of unmarried sexually active** older youth aged 20-24 using a traditional method`
res.long <- res %>% gather("Age.Group", "Percent", "15-19", "20-24")
res.long %>% filter(res.long$Percent>0)
})
output$trad_unmarr <- renderPlot({
source <- ayfp_trad_unmarr()
tcp_aw <- (ggplot(subset(ayfp_trad_unmarr(),`Percent`>0),aes(x= reorder(`Age.Group`, -`Percent`), y = `Percent`, fill = `Age.Group`)) + geom_bar(stat = "identity")) +
coord_flip() + theme_classic() + geom_text(aes(label=`Percent`), color="black", size=3.5) +
labs(subtitle = "TCP(%) Among Unmarried Sexually Active") + theme(plot.subtitle=element_text(size=13, color="black")) +
scale_fill_manual(values = cbp3, name = "Age Group") +
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom") +labs(caption=paste0("Source: ",source$Source), size=7)
vals$tcp_aw <- tcp_aw
print(tcp_aw)
})
output$downloadGraph6 <- downloadHandler(
filename = function() {
paste("TCP- UMSA", "png", sep = ".")
},
content = function(file) {
png(file, width = 980, height = 400)
print(vals$tcp_aw)
dev.off()
})
#Married
ayfp_trad_marr<- reactive({
res <- ayfp %>% select(2,3,15,16,17) %>% filter(ayfp$Country == input$country)
req(nrow(res) > 0)
res$`15-19` <- res$`% of married older adolescents aged 15-19 using a traditional method`
res$`20-24` <- res$`% of married older youth aged 20-24 using a traditional method`
res$`15-24` <- res$`% of married youth aged 15-24 using a traditional method`
res.long <- res %>% gather("Age.Group", "Percent", "15-19", "20-24", "15-24")
res.long %>% filter(res.long$Percent>0)
})
output$trad_marr <- renderPlot({
source<- ayfp_trad_marr()
tcp_mw <- (ggplot(subset(ayfp_trad_marr(), `Percent`>0), aes(x= reorder(`Age.Group`, -`Percent`), y = `Percent`, fill = `Age.Group`)) + geom_bar(stat = "identity")) +
coord_flip() + theme_classic() + geom_text(aes(label=`Percent`), color="black", size=3.5) +
labs(subtitle = "TCP(%) Among Married") + theme(plot.subtitle=element_text(size=13, color="black")) +
scale_fill_manual(values = cbp5, name = "Age Group") +
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom")+labs(caption=paste0("Source: ",source$Source), size=7)
vals$tcp_mw <- tcp_mw
print(tcp_mw)
})
output$downloadGraph7 <- downloadHandler(
filename = function() {
paste("TCP- Married Women", "png", sep = ".")
},
content = function(file) {
png(file, width = 980, height = 400)
print(vals$tcp_mw)
dev.off()
})
#Unmet Need
#UMSA
ayfp_unmet_unmarr<- reactive({
res <- ayfp %>% select(2,3,19,20,21) %>% filter(ayfp$Country == input$country)
req(nrow(res) > 0)
res$`15-19` <- res$`Unmet need: 15-19 sexually active – unmarried**`
res$`20-24` <- res$`Unmet need: 20-24 sexually active – unmarried**`
res$`15-24` <- res$`Unmet need: 15-24 sexually active  – unmarried**`
res.long <- res %>% gather("Age.Group", "Percent", "15-19", "20-24", "15-24")
res.long %>% filter(res.long$Percent>0)
})
output$unmet_unmarr <- renderPlot({
source <- ayfp_unmet_unmarr()
un_aw <- (ggplot(subset(ayfp_unmet_unmarr(), `Percent`>0), aes(x= reorder(`Age.Group`, -`Percent`), y = `Percent`, fill = `Age.Group`)) + geom_bar(stat = "identity")) +
coord_flip() + theme_classic() + geom_text(aes(label=`Percent`), color="black", size=3.5) +
labs(subtitle = "% Unmed Need Among Unmarried Sexually Active") + theme(plot.subtitle=element_text(size=13, color="black")) +
scale_fill_manual(values = cbp5, name = "Age Group") +
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom")+labs(caption=paste0("Source: ",source$Source), size=7)
vals$un_aw <- un_aw
print(un_aw)
})
output$downloadGraph8 <- downloadHandler(
filename = function() {
paste("Unmet Need - UMSA", "png", sep = ".")
},
content = function(file) {
png(file, width = 980, height = 400)
print(vals$un_aw)
dev.off()
})
#Married
ayfp_unmet_marr<- reactive({
res <- ayfp %>% select(2,3,22,23,24) %>% filter(ayfp$Country == input$country)
req(nrow(res) > 0)
res$`15-19` <- res$`Unmet need : 15-19 year olds – married`
res$`20-24` <- res$`Unmet need: 20-24 year olds – married`
res$`15-24` <- res$`Unmet need: 15-24 year olds – married`
res.long <- res %>% gather("Age.Group", "Percent", "15-19", "20-24", "15-24")
res.long %>% filter(res.long$Percent>0)
})
output$unmet_marr <- renderPlot({
source <- ayfp_unmet_marr()
un_mw <- (ggplot(subset(ayfp_unmet_marr(), `Percent`>0), aes(x= reorder(`Age.Group`, -`Percent`), y = `Percent`, fill = `Age.Group`)) + geom_bar(stat = "identity")) +
coord_flip() + theme_classic() + geom_text(aes(label=`Percent`), color="black", size=3.5) +
labs(subtitle = "% Unmet Need Among Married") + theme(plot.subtitle=element_text(size=13, color="black")) +
scale_fill_manual(values = cbp5, name = "Age Group") +
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom")+labs(caption=paste0("Source: ",source$Source), size=7)
vals$un_mw <- un_mw
print(un_mw)
})
output$downloadGraph9 <- downloadHandler(
filename = function() {
paste("Unmet Need - Married Women", "png", sep = ".")
},
content = function(file) {
png(file, width = 980, height = 400)
print(vals$un_mw)
dev.off()
})
ay_res_compare <- reactive({
res %>% filter(Country %in% input$country) # we need to this
req(nrow(res) > 0)
res
})
output$graph12 <- renderPlot({
bar_one <- (ggplot(ay_res_compare(), aes(Country, Count, fill = Age_Group)) + geom_bar(stat = "identity") +
geom_text(aes(label=paste0(Count,"%", " ", "(", (round(Round_Total/1000000,1))," ", "Million", ")")), color="black", size=3.5, position = position_stack(vjust = 0.5))) +
theme_classic() +
scale_fill_manual(values = cbp2, labels = c("Young Adolescents (10-14)", "Older Adolescents (15-19)","Older Youth (20-24)"), name = "Age Group") +
theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.title.x = element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "right")+
coord_flip()+ scale_y_reverse() +
labs(caption="Source: UN Population Division 2020", size=7)
# vals$bar_one <- bar_one_new
# print(bar_one_new)
})
# output$downloadGraph <- downloadHandler(
#     filename = function() {
#         paste("Adolescents and Youth", "png", sep = ".")
#     },
#     content = function(file) {
#         png(file, width = 980, height = 400)
#         print(vals$bar_one)
#         dev.off()
#     })
}
# Run the application
shinyApp(ui = ui, server = server)
getwd()
shiny::runApp('FP2020AYApp/FP2020AYApp')
shiny-server
getwd()
