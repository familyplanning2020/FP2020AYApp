install.packages("rsconnect")
library(rsconnect)
library(ggplot2)
library(tidyr)
library(stringr)
install.packages("stringr")
install.packages("stringr")
install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("shiny")
aydata <- read.csv("FP2020/AYPopData.csv")
View(aydata)
View(aydata)
aydata <- read.csv("FP2020/AYPopData.csv")
View(aydata)
aydata <- read.csv("FP2020/AYPopData.csv")
View(aydata)
aydata$Women.of.reproductive.age..15.49..in.2019 <- as.numeric(aydata$Women.of.reproductive.age..15.49..in.2019)
aydata$Women.of.reproductive.age..15.49..in.2019 <- as.numeric(as.character(aydata$Women.of.reproductive.age..15.49..in.2019))
aydata <- read.csv("FP2020/AYPopData.csv")
aydata$Women.of.reproductive.age..15.49..in.2019 <- as.numeric(as.character(aydata$Women.of.reproductive.age..15.49..in.2019))
View(aydata)
aydata <- read.csv("FP2020/AYPopData.csv")
View(aydata)
aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
aydata$Women.of.reproductive.age..15.49..in.2019 <- as.numeric(aydata$Women.of.reproductive.age..15.49..in.2019)
aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
aydata$Women.of.reproductive.age..15.49..in.2019 <- as.integer(aydata$Women.of.reproductive.age..15.49..in.2019)
myaydata <- read.csv("MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
View(myaydata)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
View(myaydata)
shiny::runApp('FP2020/AY_Data_App')
runApp('FP2020/samplewithtutorial')
runApp('FP2020/AY_Data_App')
View(aydata)
View(aydata)
runApp('FP2020/AY_Data_App')
runApp('FP2020/AY_Data_App')
runApp('FP2020/AY_Data_App')
runApp('FP2020/AY_Data_App')
aydata <- read.csv("FP2020/AYPopData", stringsAsFactors=FALSE)
aydata <- read.csv("FP2020/AYPopData", stringsAsFactors=FALSE)
aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
runApp('FP2020/AY_Data_App')
aydata <- read.csv("C:/Users/mabellezhang/FP2020/AYPopData.csv/", stringsAsFactors=FALSE)
#aydata <- read.csv("C:/Users/mabellezhang/FP2020/AYPopData.csv/", stringsAsFactors=FALSE)
aydata <- read.csv("FP2020/AYPopData.csv/", stringsAsFactors=FALSE)
aydata <- read.csv("C:/Users/mabellezhang/FP2020/AYPopData.csv", stringsAsFactors=FALSE)
aydata <- read.csv("Users/mabellezhang/FP2020/AYPopData.csv", stringsAsFactors=FALSE)
aydata <- read.csv("mabellezhang/FP2020/AYPopData.csv", stringsAsFactors=FALSE)
aydata <- read.csv("mabellezhang/FP2020", stringsAsFactors=FALSE)
aydata <- read.csv("/mabellezhang/FP2020/AYPopData.csv", stringsAsFactors=FALSE)
aydata <- read.csv("mabellezhang/FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("mabellezhang/FP2020/MyAYData.csv/", stringsAsFactors = FALSE)
library(shiny)
library(dplyr)
library(rsconnect)
library(ggplot2)
library(tidyr)
library(stringr)
aydata <- read.csv("~/mabellezhang/FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("~/mabellezhang/FP2020/MyAYData.csv/", stringsAsFactors = FALSE)
setwd("~/mabellezhang/FP2020")
aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv/", stringsAsFactors = FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
runApp('FP2020/AY_Data_App')
runApp('FP2020')
aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
runApp('FP2020')
library(readxl)
MyAYData <- read_excel("FP2020/MyAYData.xlsx")
View(MyAYData)
View(MyAYData)
runApp('FP2020')
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
#myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
MyAYData <- load(MyAYData)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
#myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
data <- load(MyAYData)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
runApp('FP2020')
View(myaydata)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
View(myaydata)
run(myaydata)
#aydata <- read.csv("Data/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("Data/MyAYData.csv", stringsAsFactors = FALSE)
#aydata <- read.csv("Data/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/Data/MyAYData.csv", stringsAsFactors = FALSE)
runApp('FP2020')
runApp('FP2020')
runApp('FP2020')
library(shiny)
library(dplyr)
library(rsconnect)
library(ggplot2)
library(tidyr)
library(stringr)
myaydata <- read.csv("AY_Data_App/ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
runApp('AY_Data_App/ay')
myaydata <- read.csv("ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("AY_Data_App/ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
runApp('AY_Data_App/ay')
myaydata <- read.csv("Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("./Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("./AY_Data_App/ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
runApp('AY_Data_App/ay')
shiny::runApp('AY_Data_App/ay')
runApp('AY_Data_App/ay')
shiny::runApp('AY_Data_App/ay')
runApp('AY_Data_App/ay')
runApp('AY_Data_App/ay')
setwd("~/")
shiny::runApp('AY_Data_App/AYData/ay')
View(myaydata)
View(myaydata)
View(myaydata)
View(myaydata)
View(myaydata)
View(myaydata)
setwd("~/")
library(shiny)
#
library(shiny)
library(dplyr)
library(rsconnect)
library(ggplot2)
library(tidyr)
library(stringr)
library(readxl)
library(formattable)
myaydata <- read.csv("ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPop Transformed")
setwd("~/AY_Data_App")
myaydata <- read.csv("ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
setwd("~/AY_Data_App")
myaydata <- read.csv("ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
setwd("~/AY_Data_App")
myaydata <- read.csv("ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
setwd("~/AY_Data_App/AYData")
myaydata <- read.csv("ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPop Transformed")
aypop1 <- formattable(aypopdata, digits = 0, format = "f")
View(aypop1)
options(digits = 1)
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPop Transformed")
View(aypopdata)
View(myaydata)
myaydata <- read.csv("ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata.long <- myaydata %>% gather(Age_Group, Count, Women_ReproductiveAge, Young_Adolescents, Youth, Older_Adolescents, Older_Youth)
View(myaydata.long)
View(myaydata)
View(myaydata.long)
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPOP")
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPOP")
View(aypopdata)
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPOP")
View(aypopdata)
view(aypopdata)
library(shiny)
library(dplyr)
library(rsconnect)
library(ggplot2)
library(tidyr)
library(stringr)
library(readxl)
library(formattable)
view(aypopdata)
data(aypopdata)
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPOP")
View(aypopdata)
aypopdata.long <- aypopdata %>% gather(`Women of Reproductive Age (15-49)`,`Young Adolescents (10-14)`,`Older Adolescents (15-19)`,`Older Youth (20-24)`,`Youth (15-24)`, Source)
View(aypopdata.long)
runApp('ay')
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPOP")
setwd("~/AY_Data_App")
runApp('AYData/ay')
setwd("~/AY_Data_App")
runApp('AYData/ay')
runApp('AYData/ay')
runApp('AYData/ay')
aypopdata.long <- aypopdata %>% gather(Age_Group,Count,`Women of Reproductive Age (15-49)`,`Young Adolescents (10-14)`,`Older Adolescents (15-19)`,`Older Youth (20-24)`,`Youth (15-24)`, Source)
View(aypopdata.long)
runApp('AYData/ay')
runApp('AYData/ay')
runApp('AYData/ay')
trial <- aypopdata.long %>% filter(aypopdata.long$Country == "India")
View(trial)
View(aypopdata)
trial2 <- aypopdata %>% filter(aypopdata$Country == "India")
View(trial2)
runApp('AYData/ay')
?geom_bar
runApp('AYData/ay')
View(aypopdata.long)
runApp('AYData/ay')
runApp('AYData/ay')
runApp('AYData/ay')
runApp('AYData/ay')
runApp('AYData/ay')
runApp('AYData/ay')
runApp('AYData/ay')
runApp('AYData/ay')
runApp('AYData/ay')
View(trial)
View(trial2)
View(trial)
library(shiny)
library(dplyr)
library(rsconnect)
library(ggplot2)
library(tidyr)
library(stringr)
library(readxl)
library(formattable)
aypopdata <- read_excel("Data/CleanedAYData.xlsx", sheet = "AYPOP")
aypopdata.long <- aypopdata %>% gather(Age_Group,Count,`Women of Reproductive Age (15-49)`,`Young Adolescents (10-14)`,`Older Adolescents (15-19)`,`Older Youth (20-24)`,`Youth (15-24)`, Source)
View(aypopdata)
setwd("~/AY_Data_App")
aypopdata <- read_excel("Data/CleanedAYData.xlsx", sheet = "AYPOP")
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPOP")
setwd("~/AY_Data_App")
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPOP")
setwd("~/")
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPOP")
setwd("~/AY_Data_App/AYData")
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPOP")
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPOP")
aypopdata.long <- aypopdata %>% gather(Age_Group,Count,`Women of Reproductive Age (15-49)`,`Young Adolescents (10-14)`,`Older Adolescents (15-19)`,`Older Youth (20-24)`,`Youth (15-24)`, Source)
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPOP")
aypopdata.long <- aypopdata %>% gather(Age_Group,Count,`Women of Reproductive Age (15-49)`,`Young Adolescents (10-14)`,`Older Adolescents (15-19)`,`Older Youth (20-24)`,`Youth (15-24)`)
View(aypopdata)
runApp('ay')
aypopdata <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "AYPOP")
setwd("~/AY_Data_App")
aypopdata <- read_excel("AYData/ay/Data/CleanedAYData.xlsx", sheet = "AYPOP")
runApp('AYData/ay')
setwd("~/AY_Data_App")
runApp('AYData/ay')
runApp('AYData/ay')
setwd("~/AY_Data_App/AYData")
runApp('ay')
runApp('ay')
runApp('ay')
setwd("~/AY_Data_App")
runApp('AYData/ay')
View(aypopdata.long)
runApp('AYData/ay')
runApp('AYData/ay')
runApp('AYData/ay')
runApp('AYData/ay')
runApp('AYData/ay')
runApp('AYData/ay')
install.packages("plotly")
library(plotly)
runApp('AYData/ay')
runApp('AYData/ay')
install.packages("scales")
install.packages("scales")
install.packages("lubridate")
shiny::runApp('AYData/ay')
runApp('AYData/ay')
runApp('AYData/ay')
kle_age <- read_excel("Data/CleanedAYData.xlsx", sheet = "KLEAgeEvents")
setwd("~/AY_Data_App")
kle_age <- read_excel("Data/CleanedAYData.xlsx", sheet = "KLEAgeEvents")
setwd("~/AY_Data_App/AYData")
kle_age <- read_excel("Data/CleanedAYData.xlsx", sheet = "KLEAgeEvents")
aypopdata <- read_excel("Data/CleanedAYData.xlsx", sheet = "AYPOP")
setwd("~/AY_Data_App/AYData/ay")
kle_age <- read_excel("Data/CleanedAYData.xlsx", sheet = "KLEAgeEvents")
View(kle_age)
setwd("~/AY_Data_App/AYData")
kle_age <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "KLEAgeEvents")
kle_age <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "KLEAgeEvents")
View(kle_age)
kle_age <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "KLEAgeEvents")
View(kle_age)
kle_marriage <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "KLEMarriage")
View(kle_marriage)
try2 <- kle_age %>% filter(kle_age$Country == "India")
View(try2)
runApp('ay')
setwd("~/AY_Data_App")
runApp('AYData/ay')
setwd("~/AY_Data_App/AYData")
runApp('ay')
setwd("~/AY_Data_App/AYData")
runApp('ay')
runApp('ay')
runApp('ay')
res2 <- kle_age %>% filter(kle_age$Country == "India")
res2.long <- res2 %>% gather(Event, Age, `First Marriage`,`First Sex`, `First Birth`)
res2.long
res2.long <- res2 %>% gather(Event, Age, `First Marriage`,`First Sex`, `First Birth`)
res2.long
view(res2.long)
view(res2.long)
View(res2.long)
View(res2)
View(res2.long)
knitr::opts_chunk$set(echo = TRUE)
x <- data.frame("Country" = c("India","India", "India"), "Source" = c("DHS","DHS", "DHS"), "Event" = c("First Marriage", "First Sex", "First Birth"), "Age" = c(20, 20, 22))
x <- data.frame("Country" = c("India","India", "India"), "Source" = c("DHS","DHS", "DHS"), "Event" = c("First Marriage", "First Sex", "First Birth"), "Age" = c(20, 20, 22))
View(x)
library(ggplot2)
?rep
positions <- c(-0.5)
directions <- c(1)
line_pos <- data.frame(
"position"=rep(positions, length.out=length(df$event)),
"direction"=rep(directions, length.out=length(df$event))
)
df <- data.frame("Country" = c("India","India", "India"), "Source" = c("DHS","DHS", "DHS"), "Event" = c("First Marriage", "First Sex", "First Birth"), "Age" = c(20, 20, 22))
positions <- c(-0.5)
directions <- c(1)
line_pos <- data.frame(
"position"=rep(positions, length.out=length(df$event)),
"direction"=rep(directions, length.out=length(df$event))
)
df <- merge(x=df, y=line_pos, by="Event", all = TRUE)
positions <- c(-0.5)
directions <- c(1)
line_pos <- data.frame(
"position"=rep(positions, length.out=length(df$event)),
"direction"=rep(directions, length.out=length(df$event))
)
df <- merge(x=df, y=line_pos, by="Country", all = TRUE)
positions <- c(-0.5)
directions <- c(1)
line_pos <- data.frame(
"position"=rep(positions, length.out=length(df$event)),
"direction"=rep(directions, length.out=length(df$event))
)
df <- merge(x=df, y=line_pos, by="Age", all = TRUE)
You can also embed plots, for example:
?by
status_levels <- c("First Marriage", "First Sex", "First Birth")
status_colors <- c("#0070C0", "#00B050", "#FFC000")
df$status <- factor(df$status, levels=status_levels, ordered=TRUE)
status_levels <- c("First Marriage", "First Sex", "First Birth")
status_colors <- c("#0070C0", "#00B050", "#FFC000")
df$status <- factor(df$Event, levels=status_levels, ordered=TRUE)
View(df)
positions <- c(-0.5)
directions <- c(1)
line_pos <- data.frame(
"position"=rep(positions, length.out=length(df$Event)),
"direction"=rep(directions, length.out=length(df$Event))
)
df <- merge(x=df, y=line_pos, by="Age", all = TRUE)
positions <- c(-0.5)
directions <- c(1)
line_pos <- data.frame(
"position"=rep(positions, length.out=length(df$Event)),
"direction"=rep(directions, length.out=length(df$Event))
)
df <- merge(x=df, y=line_pos, by = "position" , all = TRUE)
positions <- c(-0.5)
directions <- c(1)
line_pos <- data.frame("Position" = c(-0.5, -0.5, -0.5), "Directions" = c(1, 1, 1))
df <- merge(x=df, y=line_pos, by = "position" , all = TRUE)
positions <- c(-0.5)
directions <- c(1)
line_pos <- data.frame("Position" = c(-0.5, -0.5, -0.5), "Directions" = c(1, 1, 1))
df <- merge(x=df, y=line_pos, all = TRUE)
df
line_pos <- data.frame("Position" = c(-0.5, -0.5, -0.5), "Directions" = c(-1, -1, -1), "Text" = c(-0.25, -0.25, -0.25))
df <- merge(x=df, y=line_pos, all = TRUE)
df
View(df)
library(ggplot2)
df <- data.frame("Country" = c("India","India", "India"), "Source" = c("DHS","DHS", "DHS"), "Event" = c("First Marriage", "First Sex", "First Birth"), "Age" = c(20, 20, 22))
status_levels <- c("First Marriage", "First Sex", "First Birth")
status_colors <- c("#0070C0", "#00B050", "#FFC000")
df$status <- factor(df$Event, levels=status_levels, ordered=TRUE)
line_pos <- data.frame("Position" = c(-0.5, -0.5, -0.5), "Directions" = c(-1, -1, -1), "Text" = c(-0.25, -0.25, -0.25))
df <- merge(x=df, y=line_pos, all = TRUE)
df
View(df)
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot + theme_classic()
timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- timeline_plot + theme_classic()
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- timeline_plot + theme_classic()
timeline_plot<- timeline_plot + labs(col="Events")
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- timeline_plot + theme_classic()
timeline_plot<- timeline_plot + labs(col="Events")
timeline_plot<- timeline_plot + scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
timeline_plot
# Don't show axes, appropriately position legend
timeline_plot<- timeline_plot + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Don't show axes, appropriately position legend
timeline_plot<- timeline_plot + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot + geom_text(aes(y=text_position,label=event),size=2.5)
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot + geom_text(aes(y=text_position,label=Event),size=2.5)
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot + geom_text(aes(y=text_position,label="event"),size=2.5)
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot + geom_text(aes(y=text_position,label=event),size=2.5)
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot + geom_text(aes(y=text_position,label=df$event),size=2.5)
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes(y = text_position, label=event),size=2.5)
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes(y = text_position, label="event"),size=2.5)
timeline_plot
df <- data.frame("Country" = c("India","India", "India"), "Source" = c("DHS","DHS", "DHS"), "Event" = c("First Marriage", "First Sex", "First Birth"), "Age" = c(20, 21, 22))
status_levels <- c("First Marriage", "First Sex", "First Birth")
status_colors <- c("#0070C0", "#00B050", "#FFC000")
df$status <- factor(df$Event, levels=status_levels, ordered=TRUE)
line_pos <- data.frame("Position" = c(-0.5, -0.5, -0.5), "Directions" = c(-1, -1, -1), "Text" = c(-0.25, -0.25, -0.25))
df <- merge(x=df, y=line_pos, all = TRUE)
df
line_pos <- data.frame("Position" = c(-0.5, -0.5, -0.5), "Directions" = c(-1, -1, -1), "Text" = c(-0.25, -0.25, -0.25))
df <- merge(x=df, y=line_pos, all = TRUE)
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- timeline_plot + theme_classic()
timeline_plot<- timeline_plot + labs(col="Events")
timeline_plot<- timeline_plot + scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
timeline_plot
# Don't show axes, appropriately position legend
timeline_plot<- timeline_plot + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
timeline_plot
# Show text for each month
timeline_plot<-timeline_plot+geom_text(data=month_df, aes(x=month_date_range,y=-0.1,label=month_format),size=2.5,vjust=0.5, color='black', angle=90)
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- timeline_plot +
theme_classic() +
labs(col="Events") +
scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
timeline_plot
runApp('ay')
