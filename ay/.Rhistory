library(ggplot2)
library(tidyr)
library(stringr)
aydata <- read.csv("~/mabellezhang/FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("~/mabellezhang/FP2020/MyAYData.csv/", stringsAsFactors = FALSE)
setwd("~/mabellezhang/FP2020")
aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv/", stringsAsFactors = FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
runApp('FP2020/AY_Data_App')
runApp('FP2020')
aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
runApp('FP2020')
library(readxl)
MyAYData <- read_excel("FP2020/MyAYData.xlsx")
View(MyAYData)
View(MyAYData)
runApp('FP2020')
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
#myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
MyAYData <- load(MyAYData)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
#myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
data <- load(MyAYData)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
runApp('FP2020')
View(myaydata)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
View(myaydata)
run(myaydata)
#aydata <- read.csv("Data/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("Data/MyAYData.csv", stringsAsFactors = FALSE)
#aydata <- read.csv("Data/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/Data/MyAYData.csv", stringsAsFactors = FALSE)
runApp('FP2020')
runApp('FP2020')
runApp('FP2020')
library(shiny)
library(dplyr)
library(rsconnect)
library(ggplot2)
library(tidyr)
library(stringr)
myaydata <- read.csv("AY_Data_App/ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
runApp('AY_Data_App/ay')
myaydata <- read.csv("ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("AY_Data_App/ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
runApp('AY_Data_App/ay')
myaydata <- read.csv("Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("./Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("./AY_Data_App/ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
runApp('AY_Data_App/ay')
shiny::runApp('AY_Data_App/ay')
runApp('AY_Data_App/ay')
shiny::runApp('AY_Data_App/ay')
runApp('AY_Data_App/ay')
runApp('AY_Data_App/ay')
setwd("~/")
shiny::runApp('AY_Data_App/AYData/ay')
View(myaydata)
View(myaydata)
View(myaydata)
View(myaydata)
View(myaydata)
View(myaydata)
setwd("~/")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
df <- data.frame("Country" = c("India","India", "India"), "Source" = c("DHS","DHS", "DHS"), "Event" = c("First Marriage", "First Sex", "First Birth"), "Age" = c(20, 21, 22))
status_levels <- c("First Marriage", "First Sex", "First Birth")
status_colors <- c("#0070C0", "#00B050", "#FFC000")
df$status <- factor(df$Event, levels=status_levels, ordered=TRUE)
line_pos <- data.frame("Position" = c(-0.5, -0.5, -0.5), "Directions" = c(-1, -1, -1), "Text" = c(-0.25, -0.25, -0.25))
df <- merge(x=df, y=line_pos, all = TRUE)
age_buffer <- 2
age_range <- seq(min(df$Age) - months(age_buffer), max(df$Age) + months(age_buffer), by=1)
age_buffer <- 2
age_range <- seq(min(df$Age) - (age_buffer), max(df$Age) + (age_buffer), by=1)
age_df <- data.frame(age)
age_buffer <- 2
age_range <- seq(min(df$Age) - (age_buffer), max(df$Age) + (age_buffer), by=1)
age_df <- data.frame(age_range)
View(age_df)
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- timeline_plot +
theme_classic() +
labs(col="Events") +
scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
timeline_plot
# Don't show axes, appropriately position legend
timeline_plot<- timeline_plot + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
timeline_plot
age_buffer <- 2
age_range <- seq(min(df$Age) - (age_buffer), max(df$Age) + (age_buffer), by=1)
age_format <- format(age_range, '%b')
age_buffer <- 2
age_range <- seq(min(df$Age) - (age_buffer), max(df$Age) + (age_buffer), by=1)
age_df <- data.frame(age_range)
# Show text for each month
timeline_plot<- timeline_plot +
geom_text(data= age_df, aes(x = age_range , y= -0.1, label = age_range), size=2.5, vjust=0.5, color='black', angle=90)
# Show text for each month
timeline_plot<- timeline_plot +
geom_text(data= age_df, aes(x = age_range , y= -0.1, label = age_range), size=2.5, vjust=0.5, color='black', angle=90)
timeline_plot
# Show text for each month
timeline_plot<- timeline_plot +
geom_text(data= age_df, aes(x = age_range , y= 0.01, label = age_range), size=2.5, vjust=0.5, color='black', angle=90)
timeline_plot
# Show text for each month
timeline_plot<- timeline_plot +
geom_text(data= age_df, aes(x = age_range , y= 0.01, label = age_range), size=2.5, vjust=0.5, color='black')
timeline_plot
# Show text for each month
timeline_plot<- timeline_plot +
geom_text(data= age_df, aes(x = age_range , y= -0.01, label = age_range), size=2.5, vjust=0.5, color='black')
timeline_plot
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
df <- data.frame("Country" = c("India","India", "India"), "Source" = c("DHS","DHS", "DHS"), "Event" = c("First Marriage", "First Sex", "First Birth"), "Age" = c(20, 21, 22))
status_levels <- c("First Marriage", "First Sex", "First Birth")
status_colors <- c("#0070C0", "#00B050", "#FFC000")
df$status <- factor(df$Event, levels=status_levels, ordered=TRUE)
line_pos <- data.frame("Position" = c(-0.5, -0.5, -0.5), "Directions" = c(-1, -1, -1), "Text" = c(-0.25, -0.25, -0.25))
df <- merge(x=df, y=line_pos, all = TRUE)
age_buffer <- 2
age_range <- seq(min(df$Age) - (age_buffer), max(df$Age) + (age_buffer), by=1)
age_df <- data.frame(age_range)
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- timeline_plot +
theme_classic() +
labs(col="Events") +
scale_color_manual(values=status_colors, labels=status_levels, drop = FALSE)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)
timeline_plot
# Don't show axes, appropriately position legend
timeline_plot<- timeline_plot + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
timeline_plot
# Show text for each month
timeline_plot<- timeline_plot +
geom_text(data= age_df, aes(x = age_range , y= - 0.01, label = age_range), size=2.5, vjust=0.5, color='black')
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes(y = text_position, label="event"),size=2.5)
timeline_plot
# Show text for each month
timeline_plot<- timeline_plot +
geom_text(data= age_df, aes(x = age_range , y= - 0.01, label = age_range), size=1.5, vjust=0.5, color='black')
timeline_plot
timeline_plot
View(line_pos)
View(df)
View(line_pos)
View(df)
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes(y = text, label= event),size=2.5)
timeline_plot
status_levels <- c("First Marriage", "First Sex", "First Birth")
status_colors <- c("#0070C0", "#00B050", "#FFC000")
df$status <- factor(df$Event, levels=status_levels, ordered=TRUE)
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- timeline_plot +
theme_classic() +
labs(col="Events")
timeline_plot <- timeline_plot + scale_color_manual( values = status_colors, labels = status_levels, drop = FALSE)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot + geom_point(aes(y=0), size=3)
timeline_plot
View(df)
status_levels <- c("First Marriage", "First Sex", "First Birth")
status_colors <- c("blue", "green", "red")
df$status <- factor(df$Event, levels=status_levels, ordered=TRUE)
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- timeline_plot +
theme_classic() +
labs(col="Events")
timeline_plot <- timeline_plot + scale_color_manual( values = status_colors, labels = status_levels, drop = FALSE)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot + geom_point(aes(y=0), size=3)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, col = df$Event, size=0.3)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, col = black, size=0.3)
timeline_plot<- timeline_plot + geom_hline(yintercept=0, col = "black", size=0.3)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
status_levels <- c("First Marriage", "First Sex", "First Birth")
status_colors <- c("#0070C0", "#00B050", "#FFC000")
df$status <- factor(df$Event, levels=status_levels, ordered=TRUE)
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- timeline_plot +
theme_classic() +
labs(col="Events")
timeline_plot <- timeline_plot + scale_color_manual( values = status_colors, labels = status_levels, drop = FALSE)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot + geom_point(aes(y=0), size=3, col = df$Event)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot + geom_point(aes(y=0), size=3)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot + geom_point(aes(y=0), size=3)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot + geom_point(aes(y=0), size=3)
# Don't show axes, appropriately position legend
timeline_plot<- timeline_plot + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
timeline_plot
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
df <- data.frame("Country" = c("India","India", "India"), "Source" = c("DHS","DHS", "DHS"), "Event" = c("First Marriage", "First Sex", "First Birth"), "Age" = c(20, 21, 22))
status_levels <- c("First Marriage", "First Sex", "First Birth")
status_colors <- c("#0070C0", "#00B050", "#FFC000")
df$status <- factor(df$Event, levels=status_levels, ordered=TRUE)
line_pos <- data.frame("Position" = c(-0.5, -0.5, -0.5), "Directions" = c(-1, -1, -1), "Text" = c(-0.25, -0.25, -0.25))
df <- merge(x=df, y=line_pos, all = TRUE)
age_buffer <- 2
age_range <- seq(min(df$Age) - (age_buffer), max(df$Age) + (age_buffer), by=1)
age_df <- data.frame(age_range)
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- timeline_plot +
theme_classic() +
labs(col="Events")
timeline_plot <- timeline_plot + scale_color_manual( values = status_colors, labels = status_levels, drop = FALSE)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot + geom_point(aes(y=0), size=3)
# Don't show axes, appropriately position legend
timeline_plot<- timeline_plot + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Show text for each month
timeline_plot<- timeline_plot +
geom_text(data= age_df, aes(x = age_range , y= - 0.01, label = age_range), size=1.5, vjust=0.5, color='black')
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes(y = text, label= event),size=2.5)
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes(y = text, label= Age),size=2.5)
timeline_plot
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
df <- data.frame("Country" = c("India","India", "India"), "Source" = c("DHS","DHS", "DHS"), "Event" = c("First Marriage", "First Sex", "First Birth"), "Age" = c(20, 21, 22))
status_levels <- c("First Marriage", "First Sex", "First Birth")
status_colors <- c("#0070C0", "#00B050", "#FFC000")
df$status <- factor(df$Event, levels=status_levels, ordered=TRUE)
line_pos <- data.frame("Position" = c(-0.5, -0.5, -0.5), "Directions" = c(-1, -1, -1), "Text" = c(-0.25, -0.25, -0.25))
df <- merge(x=df, y=line_pos, all = TRUE)
age_buffer <- 2
age_range <- seq(min(df$Age) - (age_buffer), max(df$Age) + (age_buffer), by=1)
age_df <- data.frame(age_range)
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- timeline_plot +
theme_classic() +
labs(col="Events")
timeline_plot <- timeline_plot + scale_color_manual( values = status_colors, labels = status_levels, drop = FALSE)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot + geom_point(aes(y=0), size=3)
# Don't show axes, appropriately position legend
timeline_plot<- timeline_plot + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Show text for each month
timeline_plot<- timeline_plot +
geom_text(data= age_df, aes(x = age_range , y= - 0.01, label = age_range), size=1.5, vjust=0.5, color='black')
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes(y = text, label= Age),size=2.5)
timeline_plot
View(df)
library(ggplot2)
df <- data.frame("Country" = c("India","India", "India"), "Source" = c("DHS","DHS", "DHS"), "Event" = c("First Marriage", "First Sex", "First Birth"), "Age" = c(20, 21, 22))
status_levels <- c("First Marriage", "First Sex", "First Birth")
status_colors <- c("#0070C0", "#00B050", "#FFC000")
df$status <- factor(df$Event, levels=status_levels, ordered=TRUE)
line_pos <- data.frame("Position" = c(-0.5, -0.5, -0.5), "Directions" = c(-1, -1, -1), "Text" = c(-0.25, -0.25, -0.25))
df <- merge(x=df, y=line_pos, all = TRUE)
line_pos <- data.frame("Event"= df$Event,"Position" = c(-0.5, -0.5, -0.5), "Directions" = c(-1, -1, -1), "Text" = c(-0.25, -0.25, -0.25))
df <- merge(x=df, y=line_pos, by = "Event" all = TRUE)
line_pos <- data.frame("Event"= df$Event,"Position" = c(-0.5, -0.5, -0.5), "Directions" = c(-1, -1, -1), "Text" = c(-0.25, -0.25, -0.25))
df <- merge(x=df, y=line_pos, by = "Event", all = TRUE)
View(df)
library(ggplot2)
df <- data.frame("Country" = c("India","India", "India"), "Source" = c("DHS","DHS", "DHS"), "Event" = c("First Marriage", "First Sex", "First Birth"), "Age" = c(20, 21, 22))
View(df)
status_levels <- c("First Marriage", "First Sex", "First Birth")
status_colors <- c("#0070C0", "#00B050", "#FFC000")
df$status <- factor(df$Event, levels=status_levels, ordered=TRUE)
line_pos <- data.frame("Event"= df$Event,"Position" = c(-0.5, -0.5, -0.5), "Directions" = c(-1, -1, -1), "Text" = c(-0.25, -0.25, -0.25))
df <- merge(x=df, y=line_pos, by = "Event", all = TRUE)
View(df)
age_buffer <- 2
age_range <- seq(min(df$Age) - (age_buffer), max(df$Age) + (age_buffer), by=1)
age_df <- data.frame(age_range)
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- timeline_plot +
theme_classic() +
labs(col="Events")
timeline_plot <- timeline_plot + scale_color_manual( values = status_colors, labels = status_levels, drop = FALSE)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot + geom_point(aes(y=0), size=3)
# Plot scatter points at zero and date
timeline_plot<-timeline_plot + geom_point(aes(y=0), size=3)
timeline_plot
# Don't show axes, appropriately position legend
timeline_plot<- timeline_plot + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Show text for each month
timeline_plot<- timeline_plot +
geom_text(data= age_df, aes(x = age_range , y= - 0.01, label = age_range), size=1.5, vjust=0.5, color='black')
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes(y = text, label= Event), size=2.5)
timeline_plot
View(df)
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes(y = Text, label= Event), size=2.5)
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes (y =Text, label=Event), size=2.5)
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes (y = -1, label=Event), size=2.5)
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes (y = after_stat(Text), label=Event), size=2.5)
timeline_plot
View(df)
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes (y = df$Text, label = df$Event), size=2.5)
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes (x = Age, y = -2, label = Event), size = 2.5)
timeline_plot
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
df <- data.frame("Country" = c("India","India", "India"), "Source" = c("DHS","DHS", "DHS"), "Event" = c("First Marriage", "First Sex", "First Birth"), "Age" = c(20, 21, 22))
status_levels <- c("First Marriage", "First Sex", "First Birth")
status_colors <- c("#0070C0", "#00B050", "#FFC000")
df$status <- factor(df$Event, levels=status_levels, ordered=TRUE)
line_pos <- data.frame("Event"= df$Event,"Position" = c(-0.5, -0.5, -0.5), "Directions" = c(-1, -1, -1), "Text" = c(-0.25, -0.25, -0.25))
df <- merge(x=df, y=line_pos, by = "Event", all = TRUE)
age_buffer <- 2
age_range <- seq(min(df$Age) - (age_buffer), max(df$Age) + (age_buffer), by=1)
age_df <- data.frame(age_range)
timeline_plot<- ggplot(df, aes(x=Age,y=0, label=Event))
timeline_plot<- timeline_plot +
theme_classic() +
labs(col="Events")
timeline_plot <- timeline_plot + scale_color_manual( values = status_colors, labels = status_levels, drop = FALSE)
timeline_plot
timeline_plot<- timeline_plot + geom_hline(yintercept=0, color = "black", size=0.3)
timeline_plot
# Plot scatter points at zero and date
timeline_plot<-timeline_plot + geom_point(aes(y=0), size=3)
timeline_plot
# Don't show axes, appropriately position legend
timeline_plot<- timeline_plot + theme(axis.line.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x =element_blank(),
axis.ticks.x =element_blank(),
axis.line.x =element_blank(),
legend.position = "bottom"
)
# Show text for each month
timeline_plot<- timeline_plot +
geom_text(data= age_df, aes(x = age_range , y= - 0.01, label = age_range), size=1.5, vjust=0.5, color='black')
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes (x = Age, y = -2, label = Event), size = 2.5)
timeline_plot
timeline_plot
# Show text for each event
timeline_plot <- timeline_plot +
geom_text(aes (x = Age, y = -0.5, label = Event), size = 2.5)
+ geom_text(aes (x = Age, y = -0.1, label = Age), size = 2.5)
# Show text for each event
timeline_plot <- timeline_plot + geom_text(aes (x = Age, y = -0.5, label = Event), size = 2.5) + geom_text(aes (x = Age, y = -0.1, label = Age), size = 2.5)
timeline_plot
shiny::runApp('AY_Data_App/AYData/ay')
runApp('AY_Data_App/AYData/ay')
kle_age <- read_excel("Data/CleanedAYData.xlsx", sheet = "KLEAgeEvents")
kle_age <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "KLEAgeEvents")
getwd
getwd()
setwd("~/AY_Data_App")
kle_age <- read_excel("Data/CleanedAYData.xlsx", sheet = "KLEAgeEvents")
setwd("~/AY_Data_App/AYData")
kle_age <- read_excel("Data/CleanedAYData.xlsx", sheet = "KLEAgeEvents")
kle_age <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "KLEAgeEvents")
View(kle_age)
runApp('ay')
runApp('ay')
runApp('ay')
runApp('ay')
runApp('ay')
?plotOutput
runApp('ay')
kle_marriage <- read_excel("Data/CleanedAYData.xlsx", sheet = "KLEMarriage")
setwd("~/AY_Data_App/AYData")
kle_marriage <- read_excel("Data/CleanedAYData.xlsx", sheet = "KLEMarriage")
kle_marriage <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "KLEMarriage")
kle_marriage <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "KLEMarriage")
View(kle_marriage)
kle_marriage <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "KLEMarriage")
View(kle_marriage)
kle_marriage <- read_excel("ay/Data/CleanedAYData.xlsx", sheet = "KLEMarriage")
runApp('ay')
setwd("~/AY_Data_App/AYData/ay")
runApp()
runApp()
