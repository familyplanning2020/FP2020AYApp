install.packages("~/Downloads/SDSFoundations_1.1.tgz", repos = NULL, type = .Platform$pkgType)
Repatriation.Arrival.Survey...1.16.2020 <- read.csv("~/Downloads/Repatriation Arrival Survey - 1-16-2020.csv", header=FALSE, comment.char="#")
View(Repatriation.Arrival.Survey...1.16.2020)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
houses = read.csv("houses.csv")
library(magrittr)
library(dplyr)
library(jtools)
library(ggplot2)
library(devtools)
houses <- houses %>% filter(Total_sale_Price != 0)
houses <- houses %>% filter(Total_Sale_Date != "")
houses <- houses %>% filter(Deeded_Acreage != 0)
houses <- houses %>% filter(Land_classification == "R")
#encoding treatment and control for township
houses$treatment = houses$Township
houses$treatment[houses$treatment == 18] <- "t"
houses$treatment[houses$treatment == 7] <- "c"
houses$treatment = as.character(houses$treatment)
#summary(houses$saleprice)
#creating the year column
houses$yearintervention = as.character(houses$Total_Sale_Date)
library(stringr)
houses$yearintervention = str_sub(houses$yearintervention,-2,-1)
as.numeric(houses$yearintervention)
#encoding before and after for year
houses_final <- subset(houses, treatment == "t" | treatment == "c")
houses_final$saleprice = as.numeric(gsub(",","",houses_final$Total_sale_Price))
houses_data = houses_final %>%
group_by(yearintervention, treatment) %>%
summarise(mean_houseprice = mean(saleprice))
houses_data
houses_data$yearintervention = as.numeric(houses_data$yearintervention)
#plot of mean house prices before treatment
houses_data <- houses_data %>% filter(yearintervention>08 && yearintervention<15)
#houses_data
p <- ggplot(data= houses_data, aes(x= yearintervention, y= mean_houseprice, group= treatment)) +
geom_line(aes(linetype=treatment, color=treatment))+
geom_point(aes(color=treatment))
p + ggtitle("Mean House Prices Before Treatment") +
xlab("Year") + ylab("Mean House Price") + scale_color_discrete(name ="School Districts", breaks=c("c", "t"), labels=c("Sanderson", "Athens Drive")) + scale_shape_discrete(name ="School Districts", breaks=c("c", "t"), labels=c("Sanderson", "Athens Drive"))
#houses_final$yearintervention[houses_final$yearintervention == 13| houses_final$yearintervention == 14 | houses_final$yearintervention == 15] <- "0"
#houses_final$yearintervention[houses_final$yearintervention == 17| houses_final$yearintervention == 16] <- "1"
houses_final$yearintervention[houses_final$yearintervention == 13| houses_final$yearintervention == 14] <- "0"
houses_final$yearintervention[houses_final$yearintervention == 17| houses_final$yearintervention == 16 | houses_final$yearintervention == 15 ] <- "1"
houses_ff <- subset(houses_final, yearintervention == "0" | yearintervention == "1")
houses_ff$yearintervention = as.numeric(houses_ff$yearintervention)
#cleaning the data for regression
houses_ff <- houses_ff %>% filter(HEATED_AREA != 0)
houses_ff$logheatarea = log(houses_ff$HEATED_AREA, exp(1))
#log values
houses_ff$saleprice = as.numeric(gsub(",","",houses_ff$Total_sale_Price))
houses_ff$logsaleprice = log(houses_ff$saleprice, exp(1))
houses_ff$logacreage = log(houses_ff$Deeded_Acreage, exp(1))
linreg2 = lm(logsaleprice ~ yearintervention + treatment + yearintervention * treatment + logacreage + Effective_year + logheatarea,data = houses_ff)
summary(linreg2)
summ(linreg2)
plot_summs(linreg2, fit2, scale = TRUE)
summ(linreg2)
#plot_summs(linreg2, fit2, scale = TRUE)
houses_ff %>%
group_by(treatment, yearintervention) %>%
summarise(mean_houseprice = mean(saleprice))
#summarise(ncount = n())
mean(houses_ff$saleprice)
sd(houses_ff$saleprice)
houses_ff %>%
group_by(treatment, yearintervention) %>%
summarise(mean_houseprice = mean(saleprice))
#summarise(ncount = n())
mean(houses_ff$saleprice)
sd(houses_ff$saleprice)
summary(houses_ff$saleprice)
#houses_final$yearintervention[houses_final$yearintervention == 13| houses_final$yearintervention == 14 | houses_final$yearintervention == 15] <- "0"
#houses_final$yearintervention[houses_final$yearintervention == 17| houses_final$yearintervention == 16] <- "1"
houses_final$yearintervention[ houses_final$yearintervention == 14] <- "0"
houses_final$yearintervention[ houses_final$yearintervention == 16] <- "1"
houses_ff <- subset(houses_final, yearintervention == "0" | yearintervention == "1")
houses_ff$yearintervention = as.numeric(houses_ff$yearintervention)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
houses = read.csv("houses.csv")
library(magrittr)
library(dplyr)
library(jtools)
library(ggplot2)
library(devtools)
houses <- houses %>% filter(Total_sale_Price != 0)
houses <- houses %>% filter(Total_Sale_Date != "")
houses <- houses %>% filter(Deeded_Acreage != 0)
houses <- houses %>% filter(Land_classification == "R")
#encoding treatment and control for township
houses$treatment = houses$Township
houses$treatment[houses$treatment == 18] <- "t"
houses$treatment[houses$treatment == 7] <- "c"
houses$treatment = as.character(houses$treatment)
#summary(houses$saleprice)
#creating the year column
houses$yearintervention = as.character(houses$Total_Sale_Date)
library(stringr)
houses$yearintervention = str_sub(houses$yearintervention,-2,-1)
as.numeric(houses$yearintervention)
#encoding before and after for year
houses_final <- subset(houses, treatment == "t" | treatment == "c")
houses_final$saleprice = as.numeric(gsub(",","",houses_final$Total_sale_Price))
houses_data = houses_final %>%
group_by(yearintervention, treatment) %>%
summarise(mean_houseprice = mean(saleprice))
houses_data
houses_data$yearintervention = as.numeric(houses_data$yearintervention)
#plot of mean house prices before treatment
houses_data <- houses_data %>% filter(yearintervention>08 && yearintervention<15)
#houses_data
p <- ggplot(data= houses_data, aes(x= yearintervention, y= mean_houseprice, group= treatment)) +
geom_line(aes(linetype=treatment, color=treatment))+
geom_point(aes(color=treatment))
p + ggtitle("Mean House Prices Before Treatment") +
xlab("Year") + ylab("Mean House Price") + scale_color_discrete(name ="School Districts", breaks=c("c", "t"), labels=c("Sanderson", "Athens Drive")) + scale_shape_discrete(name ="School Districts", breaks=c("c", "t"), labels=c("Sanderson", "Athens Drive"))
#houses_final$yearintervention[houses_final$yearintervention == 13| houses_final$yearintervention == 14 | houses_final$yearintervention == 15] <- "0"
#houses_final$yearintervention[houses_final$yearintervention == 17| houses_final$yearintervention == 16] <- "1"
houses_final$yearintervention[ houses_final$yearintervention == 14] <- "0"
houses_final$yearintervention[ houses_final$yearintervention == 16] <- "1"
houses_ff <- subset(houses_final, yearintervention == "0" | yearintervention == "1")
houses_ff$yearintervention = as.numeric(houses_ff$yearintervention)
#cleaning the data for regression
houses_ff <- houses_ff %>% filter(HEATED_AREA != 0)
houses_ff$logheatarea = log(houses_ff$HEATED_AREA, exp(1))
#log values
houses_ff$saleprice = as.numeric(gsub(",","",houses_ff$Total_sale_Price))
houses_ff$logsaleprice = log(houses_ff$saleprice, exp(1))
houses_ff$logacreage = log(houses_ff$Deeded_Acreage, exp(1))
linreg2 = lm(logsaleprice ~ yearintervention + treatment + yearintervention * treatment + logacreage + Effective_year + logheatarea,data = houses_ff)
summary(linreg2)
summ(linreg2)
#plot_summs(linreg2, fit2, scale = TRUE)
#linreg2 = lm(logsaleprice ~ yearintervention + treatment + yearintervention * treatment + logacreage + Effective_year + logheatarea,data = houses_ff)
linreg2 = lm(saleprice ~ yearintervention + treatment + yearintervention * treatment + HEATED_AREA + Effective_year + Deeded_Acreage,data = houses_ff)
summary(linreg2)
devtools::install_github("hrecht/censusapi")
library(dplyr)
install.packages("rsconnect")
library(rsconnect)
library(ggplot2)
library(tidyr)
library(stringr)
install.packages("stringr")
install.packages("stringr")
install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("shiny")
aydata <- read.csv("FP2020/AYPopData.csv")
View(aydata)
View(aydata)
aydata <- read.csv("FP2020/AYPopData.csv")
View(aydata)
aydata <- read.csv("FP2020/AYPopData.csv")
View(aydata)
aydata$Women.of.reproductive.age..15.49..in.2019 <- as.numeric(aydata$Women.of.reproductive.age..15.49..in.2019)
aydata$Women.of.reproductive.age..15.49..in.2019 <- as.numeric(as.character(aydata$Women.of.reproductive.age..15.49..in.2019))
aydata <- read.csv("FP2020/AYPopData.csv")
aydata$Women.of.reproductive.age..15.49..in.2019 <- as.numeric(as.character(aydata$Women.of.reproductive.age..15.49..in.2019))
View(aydata)
aydata <- read.csv("FP2020/AYPopData.csv")
View(aydata)
aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
aydata$Women.of.reproductive.age..15.49..in.2019 <- as.numeric(aydata$Women.of.reproductive.age..15.49..in.2019)
aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
aydata$Women.of.reproductive.age..15.49..in.2019 <- as.integer(aydata$Women.of.reproductive.age..15.49..in.2019)
myaydata <- read.csv("MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
View(myaydata)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
View(myaydata)
shiny::runApp('FP2020/AY_Data_App')
runApp('FP2020/samplewithtutorial')
runApp('FP2020/AY_Data_App')
View(aydata)
View(aydata)
runApp('FP2020/AY_Data_App')
runApp('FP2020/AY_Data_App')
runApp('FP2020/AY_Data_App')
runApp('FP2020/AY_Data_App')
aydata <- read.csv("FP2020/AYPopData", stringsAsFactors=FALSE)
aydata <- read.csv("FP2020/AYPopData", stringsAsFactors=FALSE)
aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
runApp('FP2020/AY_Data_App')
aydata <- read.csv("C:/Users/mabellezhang/FP2020/AYPopData.csv/", stringsAsFactors=FALSE)
#aydata <- read.csv("C:/Users/mabellezhang/FP2020/AYPopData.csv/", stringsAsFactors=FALSE)
aydata <- read.csv("FP2020/AYPopData.csv/", stringsAsFactors=FALSE)
aydata <- read.csv("C:/Users/mabellezhang/FP2020/AYPopData.csv", stringsAsFactors=FALSE)
aydata <- read.csv("Users/mabellezhang/FP2020/AYPopData.csv", stringsAsFactors=FALSE)
aydata <- read.csv("mabellezhang/FP2020/AYPopData.csv", stringsAsFactors=FALSE)
aydata <- read.csv("mabellezhang/FP2020", stringsAsFactors=FALSE)
aydata <- read.csv("/mabellezhang/FP2020/AYPopData.csv", stringsAsFactors=FALSE)
aydata <- read.csv("mabellezhang/FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("mabellezhang/FP2020/MyAYData.csv/", stringsAsFactors = FALSE)
library(shiny)
library(dplyr)
library(rsconnect)
library(ggplot2)
library(tidyr)
library(stringr)
aydata <- read.csv("~/mabellezhang/FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("~/mabellezhang/FP2020/MyAYData.csv/", stringsAsFactors = FALSE)
setwd("~/mabellezhang/FP2020")
aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv/", stringsAsFactors = FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
runApp('FP2020/AY_Data_App')
runApp('FP2020')
aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
runApp('FP2020')
library(readxl)
MyAYData <- read_excel("FP2020/MyAYData.xlsx")
View(MyAYData)
View(MyAYData)
runApp('FP2020')
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
#myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
MyAYData <- load(MyAYData)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
#myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
data <- load(MyAYData)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
runApp('FP2020')
View(myaydata)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
#aydata <- read.csv("FP2020/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/MyAYData.csv", stringsAsFactors = FALSE)
View(myaydata)
run(myaydata)
#aydata <- read.csv("Data/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("Data/MyAYData.csv", stringsAsFactors = FALSE)
#aydata <- read.csv("Data/AYPopData.csv", stringsAsFactors=FALSE)
myaydata <- read.csv("FP2020/Data/MyAYData.csv", stringsAsFactors = FALSE)
runApp('FP2020')
runApp('FP2020')
runApp('FP2020')
library(shiny)
library(dplyr)
library(rsconnect)
library(ggplot2)
library(tidyr)
library(stringr)
myaydata <- read.csv("AY_Data_App/ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
runApp('AY_Data_App/ay')
myaydata <- read.csv("ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("AY_Data_App/ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
runApp('AY_Data_App/ay')
myaydata <- read.csv("Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("./Data/MyAYData.csv", stringsAsFactors = FALSE)
myaydata <- read.csv("./AY_Data_App/ay/Data/MyAYData.csv", stringsAsFactors = FALSE)
runApp('AY_Data_App/ay')
shiny::runApp('AY_Data_App/ay')
runApp('AY_Data_App/ay')
shiny::runApp('AY_Data_App/ay')
runApp('AY_Data_App/ay')
runApp('AY_Data_App/ay')
setwd("~/")
shiny::runApp('AY_Data_App/AYData/ay')
View(myaydata)
View(myaydata)
View(myaydata)
View(myaydata)
View(myaydata)
View(myaydata)
setwd("~/")
shiny::runApp('AY_Data_App/AYData/ay')
runApp('AY_Data_App/AYData/ay')
runApp('AY_Data_App/AYData/ay')
runApp('AY_Data_App/AYData/ay')
?aes()
runApp('AY_Data_App/AYData/ay')
runApp('AY_Data_App/AYData/ay')
res3 <- kle_marriage %>% filter(kle_marriage$Country == "India")
res3
res3 <- kle_marriage %>% filter(kle_marriage$Country == "India")
#Pulling in data from excevl
aypopdata <- read_excel("Data/CleanedAYData.xlsx", sheet = "AYPOP")
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readxl)
library(formattable)
library(plotly)
library(gt)
library(plyr)
#Pulling in data from excevl
aypopdata <- read_excel("Data/CleanedAYData.xlsx", sheet = "AYPOP")
setwd("~/AY_Data_App/AYData/ay")
#Pulling in data from excevl
aypopdata <- read_excel("Data/CleanedAYData.xlsx", sheet = "AYPOP")
kle_age <- read_excel("Data/CleanedAYData.xlsx", sheet = "KLEAgeEvents")
kle_marriage <- read_excel("Data/CleanedAYData.xlsx", sheet = "KLEMarriage")
ayfp <- read_excel("Data/CleanedAYData.xlsx", sheet = "AYFPUse")
res3 <- kle_marriage %>% filter(kle_marriage$Country == "India")
View(res3)
data.frame(colnames(res3))
runApp()
View(res3)
res3 <- kle_marriage %>% filter(kle_marriage$Country == "India")
data.frame(colnames(res3))
res3 %>%
gather(`Age Group`, `Married`, `% of 15-19 year olds who are married`,`% of 20-24 year olds who are married`,
`% of adolescent and youth (15-24) who are married`, ` % of 20-24 year olds married before 18`,
` % of 25-29 year olds married before 18`)
res3 %>%
gather(`Age Group`, `Married`, `% of 15-19 year olds who are married`,`% of 20-24 year olds who are married`,
`% of adolescent and youth (15-24) who are married`, `% of 20-24 year olds married before 18`,
`% of 25-29 year olds married before 18`)
res3[1,1]
res3[1,2]
res3[2,2]
res3[2,1]
table1 <- matrix(c(res3[1,2], NA, res3[1,3], res3[1,5], res3[1,4], NA, NA, res3[1,6]), ncol = 2, byrow = TRUE)
View(table1)
colnames(table1) <- c("% Married", "Married before 18")
rownames(table1) <- c("15-19", "20-24", "15-24", "25-29")
table2 <- as.table(table1)
View(table2)
table2
View(table2)
view(table2)
smoke <- matrix(c(51,43,22,92,28,21,68,22,9),ncol=3,byrow=TRUE)
View(smoke)
res3[[1,2]]
table1 <- matrix(c(res3[[1,2]], NA, res3[[1,3]], res3[[1,5]], res3[[1,4]], NA, NA, res3[[1,6]]), ncol = 2, byrow = TRUE)
View(table1)
colnames(table1) <- c("% Married", "Married before 18")
rownames(table1) <- c("15-19", "20-24", "15-24", "25-29")
table2 <- as.table(table1)
table2
runApp()
runApp()
runApp()
table2
runApp()
runApp()
shiny::runApp()
